
Approach 1: Linear time solution
/----------------------------------------
class Solution {
public:
    int firstUniqChar(string s) {
        
        unordered_map<char,int> map ;
        
        for(int i = 0 ; i < s.length() ; i++)
        {
            if(map.count(s[i]) == 0)
            {
                map[s[i]] = 1 ;
            }
            else
            {
                map[s[i]]++;
            }
        }
        
        for(int i = 0 ; i < s.length() ; i++)
        {
            if(map[s.at(i)] == 1)
            {
                return i ;
            }

        }
        
             return  -1;
        
        
        
    }
};


//----------------------------------------
Approach 2: frequancy


class Solution {
public:
    int firstUniqChar(string s) {
        
        int count[26] = {0};
        
        for(int i = 0 ; i < s.length() ; i++)
        {
            count[s[i] - 'a']++ ; 
        }
        
        for(int i = 0 ; i < s.length() ; i++)
        {
            if(count[s[i] - 'a'] == 1)
            {
                return i;
            }
            
            
        }
        return -1;
    }
};

