
//---------------------------solution 1 ---------------------------------

Runtime: 0 ms, faster than 100.00% of C++ online submissions for N-th Tribonacci Number.
Memory Usage: 5.7 MB, less than 97.02% of C++ online submissions for N-th Tribonacci Number.


//Tabulation Code- (Bottom Up Dp)

class Solution {
public:
    int tribonacci(int n) {
        
        // tribonacci number :  0 1 1 2 4 7 13
       
        
        int dp[40];
        dp[0] = 0 ;
        dp[1] = 1 ; 
        dp[2] = 1 ;
        
        if(n<=2) return dp[n];
        
        for(int i = 3 ; i <= n ; i++)
        {
            dp[i] = dp[ i - 1] + dp[i - 2] + dp[i - 3];
        }
        return dp[n];
          
    }
};


//---------------------------------------DP solution - O(n) time O(1) space - 0 ms,  //-------------------------
Runtime: 0 ms, faster than 100.00% of C++ online submissions for N-th Tribonacci Number.
Memory Usage: 5.7 MB, less than 97.02% of C++ online submissions for N-th Tribonacci Number.

class Solution {
public:
    int tribonacci(int n) {
        
     if(n <= 1) return n ;
     if(n == 2) return 1 ;
    
        
        int a = 0;
        int b = 1;
        int c = 1;
        int sum = a + b + c ;
        while(n >= 3)
        {
            sum = a + b + c ;
            a = b ;
            b = c ;
            c = sum ; 
            n-- ;
        }
        
        return sum ;
        
    }
};


//------------------------------------solution 3 

Runtime: 0 ms, faster than 100.00% of C++ online submissions for N-th Tribonacci Number.
Memory Usage: 6 MB, less than 48.15% of C++ online submissions for N-th Tribonacci Number.


class Solution {
public:
    int tribonacci(int n) {
        
     if(n <= 1) return n ;
     if(n == 2) return 1 ;
    
        
        int a = 0;
        int b = 1;
        int c = 1;
        int sum = a + b + c ;
      for( int i = 3 ; i <= n ; i++)
        {
            sum = a + b + c ;
            a = b ;
            b = c ;
            c = sum ; 
            
        }
        
        return sum ;
        
    }
};

