class Solution {
public:
    int maxArea(vector<int>& height) {
        
        int maxArea = 0 ;
        int left =  0 ;
        int right = height.size() - 1 ;
        
        while(left < right)
        {
            int  w = right - left ;
            int  h = min(height[left] , height[right]);
            int area = h * w ;
            maxArea = max(maxArea , area);
            
            if(height[left] < height[right])
            {
                left++;
            }
            else if(height[left] > height[right])
            {
                right--;
            }
            else
            {
                left++ ;
                right--;
            }
        }
        
        return maxArea;
            
        
    }
};



//----------------------nick white solo 


class Solution {
public:
    int maxArea(vector<int>& height) {
        
        int maxArea = 0 ;
        int left =  0 ;
        int right = height.size() - 1 ;
        
        while(left < right)
        {
            
            if(height[left] < height[right])
            {
                maxArea = max(maxArea , min(height[left] , height[right]) * (right - left ));
                left++;
            }
            else 
            {
                 maxArea = max(maxArea , min(height[left] , height[right]) * (right - left ));
                right--;
            }
         
        }
        
        return maxArea;
            
        
    }
};
