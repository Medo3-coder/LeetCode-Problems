448. Find All Numbers Disappeared in an Array



 // binary_search(start_ptr, end_ptr, num) : This function returns boolean true if the element is present in the container, else returns false.
//This searching only works when container is sorted 


solution 1  : 
Runtime: 96 ms, faster than 58.13% of C++ online submissions for Find All Numbers Disappeared in an Array.
Memory Usage: 33.7 MB, less than 94.15% of C++ online submissions for Find All Numbers Disappeared in an Array


class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int> notfound;
        
      sort(nums.begin(),nums.end());
      
        for(int i = 1 ; i <= nums.size() ; i++ )
        {
            if(!(binary_search(nums.begin(),nums.end() , i)))
            {
                notfound.push_back(i);
            }
               
               
        }
               
               return notfound;
     }
               
   
};

//--------------------------------------------------------------------------------------------------------------------------



solution 2 : 


class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int> MissingNums;
        
       //set will not add duplicated numbers   [4,3,2,7,8,1] // 2 and 3 repeated so not add
        set<int> numbers ; 
        
        for(int i : nums )
        {    
            
            numbers.insert(i);
        }
        
        for(int i = 1 ; i <= nums.size() ; i++)
        {
            if(!numbers.count(i))   //if it doesn't contain it 
            MissingNums.push_back(i); // insert to MissingNums 
        }
        
        
        return MissingNums;
    }
};
