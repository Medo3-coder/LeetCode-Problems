check this if forget solution 
// https://www.youtube.com/watch?v=YK78FU5Ffjw&list=PLgUwDviBIf0rQ6cnlaHRMuOp4H_D-7hwP&index=7

/*

Runtime: 0 ms, faster than 100.00% of C++ online submissions for Permutations.
Memory Usage: 7.8 MB, less than 57.63% of C++ online submissions for Permutations.

*/


class Solution {

  void recurPermute(vector<int> &ds, vector<int> &nums, vector<vector<int>> &ans, int freq[]) {
        if(ds.size() == nums.size()) {
            ans.push_back(ds); 
            return; 
        }
        for(int i = 0;i<nums.size();i++) {
            if(!freq[i]) {
                ds.push_back(nums[i]);
                freq[i] = 1;      // mark 
                recurPermute(ds, nums, ans, freq);
                freq[i] = 0;       // unmark 
                ds.pop_back(); 
            }
        }
        
    }
    

   public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans; 
        vector<int> ds; 
        int freq[nums.size()]; 
        for(int i = 0;i<nums.size();i++) 
        {
            freq[i] = 0;  
        }
           
        recurPermute(ds, nums, ans, freq); 
        return ans; 
    }
};
