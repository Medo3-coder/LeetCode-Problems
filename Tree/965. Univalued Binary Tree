/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
 bool isUnivalTree(TreeNode* root) {
    
        if(root == NULL)               // if node is null
        {
            return true ;          
        }
        
        if(!root->left && !root->right)  // if node is leaf
        {
            return true ;
        }
        
        if(root->left && root->left->val != root->val) // if left node value != curr node val
        {
            return false ;
        }
        
        if(root->right && root->right->val != root->val) // if right node value != curr node val
        {
            return false ;
        }
     
     // combining the result of both left and right sub tree
      
       return isUnivalTree(root->left) && isUnivalTree(root->right);
        
        
    }
    
    
  
};
