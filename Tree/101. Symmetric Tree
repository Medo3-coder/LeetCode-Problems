/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        
        if(root == NULL)
        {
            return true ;
        }
        
        // check if left tree is symmetric to the right tree 
        
        return IsMirror(root->left , root->right);
        
    }
    
    
  bool IsMirror(TreeNode*p , TreeNode*q)
    {
        if(p == NULL && q == NULL)
        {
            return true ; 
        }
        // Is any one of p or q null ? Or are these values different ? No. Both values are
        // same so this else if wont execute either
        if(p == NULL || q == NULL || p->val != q->val)
        {
            return false ;
        }
        if(p->val == q->val )
        {
            return 
                IsMirror(p->left , q->right) &&  IsMirror(p->right , q->left);
                
        }
        
        return false ;
    }
};
