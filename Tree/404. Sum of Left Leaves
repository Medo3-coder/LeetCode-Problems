// -------------------------------sol 1 -----------------------



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum;
    int sumOfLeftLeaves(TreeNode* root) {
        
        if(root ==NULL)
        {
            return 0 ;
        }
        
        if(root->left)
        {
            if(root->left->left == NULL && root->left->right == NULL)
            {
                sum += root->left->val ;
            }
        }
        sumOfLeftLeaves(root->left);
        sumOfLeftLeaves(root->right);
        
        return sum; 
        
    }
};




//-----------------------------------------------------------sol 2 ----------


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int sum ; 
    int sumOfLeftLeaves(TreeNode* root) {
        
       return   help(root);
        
       
        
        
    }
    
    
    int help(TreeNode* root)
    {
        if(root == NULL)
            return 0; 
        
        
        if(root->left)
        {
            TreeNode* node = root->left ;
            if(!node->left && !node->right)
            {
                sum += node->val;
            }
        }
        
        help(root->left);
        help(root->right);
        
        
            return sum;
    
    }
};
