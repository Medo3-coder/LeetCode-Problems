// ----------------- 1 approach  

 check link pls : https://leetcode.com/problems/encode-and-decode-tinyurl/discuss/1110551/JS-Python-Java-C%2B%2B-or-Easy-Map-Solution-w-Explanation

//--------


class Solution {
public:
    
    unordered_map<string, string> codeDB, urlDB;
    const string chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    
    string getCode()
    {
        string code = "";
        for(int i = 0 ; i < 6 ; i++)
        {
            code  += chars[rand() % 62]; 
            
        }
     return "http://tinyurl.com/" + code ;

    }

    // Encodes a URL to a shortened URL.
    string encode(string longUrl) {
        if(urlDB.find(longUrl) != urlDB.end())
        {
            //To avoid having to encode the same url twice with different random codes
            return urlDB[longUrl];
        }
        
        string code = getCode();
        while(codeDB.find(code) != codeDB.end())
        {
            code = getCode();
        }
            codeDB[code] = longUrl;
        
            urlDB[longUrl] = code ;
        
              return code ;
        
    }

    // Decodes a shortened URL to its original URL.
    string decode(string shortUrl) {
        return codeDB[shortUrl];
        
    }
};



//-------------------------------------------------------  2 approach 
 
 pls check : https://www.youtube.com/watch?v=zMbHZnWZGGE&list=PLk_DdB3uhk2DjR5S3HKHT_2pvX9SPtuDz&index=5

//-----------


class Solution {
public:

    map<string , string> mp ;
    int num = 0 ;
    // Encodes a URL to a shortened URL.
    string encode(string longUrl) {
        num++ ;
        string addOn = to_string(num);
        string ans = "http://tinyurl.com/";
        ans += (string)addOn ;
        mp[ans] = longUrl;
        return ans ;
        
    }

    // Decodes a shortened URL to its original URL.
    string decode(string shortUrl) {
        return mp[shortUrl];
        
    }
};
