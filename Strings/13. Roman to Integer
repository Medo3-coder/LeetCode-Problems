

// --------------------------- solution 1 ----------------------------------------



Runtime: 4 ms, faster than 91.91% of C++ online submissions for Roman to Integer.
Memory Usage: 6 MB, less than 67.76% of C++ online submissions for Roman to Integer
//-------------------------------------




class Solution {
public:
    
    int value(char ch)
    {
        switch(ch)
        {
                 case 'I' : return 1    ;
                 case 'V' : return 5    ;
                 case 'X' : return 10   ;
                 case 'L' : return 50   ;
                 case 'C' : return 100  ;
                 case 'D' : return 500  ;
                 case 'M' : return 1000 ;
                
        }
        return 0 ;
    }
    
    
    
    
    int romanToInt(string s) {
        
        if(s.size() == NULL)
        {
            return 0 ;
        }
        int res = 0 ; 
        int n= s.size();
        
        for(int i = 0 ; i < n ; i++ )
        {
             if(value(s[i])<value(s[i+1]))                   
            {
                res = res - value(s[i]);                     // IV   //5-1 = 4
            }
            else
            {
                res = res + value(s[i]) ;                    // VX  = 5 + 10 
            }
        }
        
        return res ; 
    }
};

///////////////////------------------------------------------second solutions -------------------- hashMap-------------






class Solution {
public:
    int romanToInt(string s) {
        
        unordered_map<char , int> mp {
            
            {'I' , 1}  ,
            {'V' , 5}  ,
            {'X' , 10} ,
            {'L' , 50} ,
            {'C' , 100},
            {'D' , 500},
            {'M', 1000},
            
        };
        
        int result = 0 ;
        
        for( int i = 0 ; i < s.size() ; i++)
        {
            if(mp[s[i]] < mp[s[i + 1]])
            {
                result -= mp[s[i]];
            }
            else
            {
                result += mp[s[i]];
            }
        }
        
        return result;
        
    }
};


https://www.youtube.com/watch?v=Xy1dfcg7P-Y



//----------------------------------------------------- 3rd soloution         -----------------




class Solution {
    
private : 
    
    int fun(char a)
        {
            if( a == 'I' ) return 1 ;
            if( a == 'V' ) return 5 ;
            if( a == 'X' ) return 10 ;
            if( a == 'L' ) return 50 ;
            if( a == 'C' ) return 100 ;
            if( a == 'D' ) return 500 ;
            if( a == 'M' ) return 1000 ;
        
        return 0;
        };
    
    
public:
    
    int romanToInt(string s) {
        
         int result = 0 ;
        
         int size = s.size();
        
        for( int i = 0 ; i < size ; i++)
        {
            if(i < size - 1 && fun(s[i]) < fun(s[i + 1]))
            {
                result -= fun(s[i]);
            }
            else
            {
                result += fun(s[i]);
            }
        }
        
        return result;
        
    }
};
