
1603. Design Parking System


/*
class ParkingSystem {
    int big ;
    int medium ;
    int small ;
public:
    ParkingSystem(int big, int medium, int small) {
        this-> big = big ;
        this->small = small ;
        this->medium = medium ;
        
    }
    
    bool addCar(int carType) {
        if(carType == 1 && this->big > 0)
        {
            this->big -= 1 ;
            return true ;
        }
        if(carType == 2 && this->medium> 0)
        {
            this->medium -= 1 ;
            return true ;
        }
          if(carType == 3 && this->small > 0)
        {
            this->small -= 1 ;
            return true ;
        }
        else return false ;
    }
};

*/
/*

class ParkingSystem {
    private : 
     vector <int> slots ; 
    public:
    ParkingSystem(int big, int medium, int small) {
       
        slots.push_back(big) ;
        slots.push_back(medium);
        slots.push_back(small) ;
        
    }
    
        bool addCar(int carType) {
            
            if(slots[carType - 1] > 0)
            {
                slots[carType - 1 ] --  ;
                return true ;
                
            }
            return false ;
            
        }
    
    
    
};

*/

class ParkingSystem {
   
     
    public:
    
    int arr[3] ;
    ParkingSystem(int big, int medium, int small) {
       
        arr[0]  =  big ;
        arr[1] = medium;
        arr[2] = small ;
        
    }
    
        bool addCar(int carType) {
            
        
            bool lol = false ;
            switch (carType) 
            {
                case 1 : 
                    arr[0]-- ;
                    if(arr[0] >= 0)
                    {
                        lol =  true ;    
                    }
                    else 
                    {
                        lol = false;
                    }
                    
                    break ; 
                    
                case 2:
                    arr[1]-- ;
                    if(arr[1] >= 0) 
                    {
                        lol = true ;
                    }
                    else 
                    {
                        lol = false ; 
                    }
                    break ;
                    
                    
                    
                case 3:
                    arr[2]--;
                    if(arr[2] >= 0 )
                    {
                        lol = true ;
                    }
                    else 
                    {
                        lol = false ;  
                    }
                    break ; 
                    
            }
            return lol ;
            
        }
    
    
    
};






/**
 * Your ParkingSystem object will be instantiated and called as such:
 * ParkingSystem* obj = new ParkingSystem(big, medium, small);
 * bool param_1 = obj->addCar(carType);
 */
